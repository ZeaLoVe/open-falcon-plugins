# 脚本的内容仅仅是调用genmetrics程序，执行结果根据open-falcon的要求输出到标准输出
# 该程序有三个参数，脚本使用了其中的两个。一个是API的URL地址，prometheus监控库的输出是有标准格式的
# 参考 http://prometheus.io/docs/practices/naming/ 
# 其输出的是自定义标签式的文本文件，支持5种metrics类型，目前仅适用Counter、Gauge两种类型的指标。
# 根据prometheus的API去解析该格式的输出，然后通过filter，过滤掉不需要的指标。
# open-falcon的插件机制会去执行本脚本，将标准输出收集起来，并通过Falcon的Getaway发送到数据库中。

# 安装步骤

# 已安装genmetrics则跳过此步骤
# 将build.sh、etcdmetric.sh、genmetrics（可执行文件） 拷贝到一个目录里（名字随意）
# 直接执行./genmetrics 会返回 “not Data” 。因为没指定获取指标的API参数。可以执行说明已经安装了genmetrics
sh build.sh 将 genmetrics 安装到/usr/bin/下

# 已设置falcon插件开启模式，则跳过此步骤
# open-falcon的agent默认部署路径是 /usr/local/open-falcon/agent 
cd /usr/local/open-falcon/agent 
mkdir plugin
# 改写配置文件，开启插件
sed -i "s/: false/: true/g" cfg.json

# 安装插件
cd /usr/local/open-falcon/agent/plugin 
mkdir skydnsmetric
cp ~/genmetrics/skydnsmetric.sh skydnsmetric/60_skydnsmetric.sh
# 重启falcon agent
../control restart